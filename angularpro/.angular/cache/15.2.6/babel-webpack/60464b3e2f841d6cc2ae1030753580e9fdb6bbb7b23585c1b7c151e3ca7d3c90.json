{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ApiService {\n  getPersonajesById(id) {\n    throw new Error('Method not implemented.');\n  }\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = \"http://localhost:3000/RAP\";\n    this.baseUrl2 = \"http://localhost:3000/BOSSANOVA\";\n    this.baseUrl3 = \"http://localhost:3000/POP\";\n    this.albumInfo = {\n      id: \"\",\n      nombre: \"\",\n      edad: \"\",\n      origen: \"\",\n      src: \"\",\n      alt: \"\"\n    };\n    this.getRAPs = () => {\n      return this.http.get(this.baseUrl);\n    };\n    this.getRAP = id => {\n      return this.http.get(`${this.baseUrl}/${id}`);\n    };\n    this.postRAP = album => {\n      return this.http.post(this.baseUrl, album);\n    };\n    this.getBOSSANOVA = () => {\n      return this.http.get(this.baseUrl2);\n    };\n    this.getBOSSA = id => {\n      return this.http.get(`${this.baseUrl2}/${id}`);\n    };\n    this.postBOSSA = album => {\n      return this.http.post(this.baseUrl2, album);\n    };\n    this.getPOP = () => {\n      return this.http.get(this.baseUrl3);\n    };\n    this.getPOPI = id => {\n      return this.http.get(`${this.baseUrl3}/${id}`);\n    };\n    this.postPOPI = album => {\n      return this.http.post(this.baseUrl3, album);\n    };\n    this.deleteCantante = id => {\n      return this.http.delete(`${this.baseUrl}/${id}`);\n      // return this.http.delete(`${this.baseUrl2}/${id}`);\n      // return this.http.delete(`${this.baseUrl3}/${id}`);\n    };\n\n    this.editarItem = albums => {\n      this.albumInfo = albums;\n    };\n    this.cleanAlbum = () => {\n      this.albumInfo = {\n        id: \"\",\n        nombre: \"\",\n        edad: \"\",\n        origen: \"\",\n        src: \"\",\n        alt: \"\"\n      };\n    };\n    this.putAlbum = (albumId, editedAlbum) => {\n      return this.http.put(`${this.baseUrl}/${albumId}`, editedAlbum);\n      // return this.http.put(`${this.baseUrl2}/${albumId}`, editedAlbum)\n      // return this.http.put(`${this.baseUrl3}/${albumId}`, editedAlbum)\n    };\n  }\n}\n\nApiService.ɵfac = function ApiService_Factory(t) {\n  return new (t || ApiService)(i0.ɵɵinject(i1.HttpClient));\n};\nApiService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ApiService,\n  factory: ApiService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,UAAU;EACrBC,iBAAiB,CAACC,EAAU;IAC1B,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;EAC5C;EAQAC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAPxB,YAAO,GAAU,2BAA2B;IAC5C,aAAQ,GAAU,iCAAiC;IACnD,aAAQ,GAAU,2BAA2B;IAOrC,cAAS,GAAG;MAClBH,EAAE,EAAE,EAAE;MACNI,MAAM,EAAE,EAAE;MACVC,IAAI,EAAE,EAAE;MACRC,MAAM,EAAE,EAAE;MACVC,GAAG,EAAE,EAAE;MACPC,GAAG,EAAE;KACN;IAED,YAAO,GAAG,MAAK;MACb,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAAC,IAAI,CAACC,OAAO,CAAC;IACpC,CAAC;IACD,WAAM,GAAIV,EAAS,IAAG;MACpB,OAAO,IAAI,CAACG,IAAI,CAACM,GAAG,CAAC,GAAG,IAAI,CAACC,OAAO,IAAIV,EAAE,EAAE,CAAC;IAC/C,CAAC;IACD,YAAO,GAAIW,KAAS,IAAG;MACrB,OAAO,IAAI,CAACR,IAAI,CAACS,IAAI,CAAC,IAAI,CAACF,OAAO,EAAEC,KAAK,CAAC;IAE5C,CAAC;IAGD,iBAAY,GAAG,MAAK;MAClB,OAAO,IAAI,CAACR,IAAI,CAACM,GAAG,CAAC,IAAI,CAACI,QAAQ,CAAC;IACrC,CAAC;IACD,aAAQ,GAAIb,EAAS,IAAG;MACtB,OAAO,IAAI,CAACG,IAAI,CAACM,GAAG,CAAC,GAAG,IAAI,CAACI,QAAQ,IAAIb,EAAE,EAAE,CAAC;IAChD,CAAC;IACD,cAAS,GAAIW,KAAS,IAAG;MACvB,OAAO,IAAI,CAACR,IAAI,CAACS,IAAI,CAAC,IAAI,CAACC,QAAQ,EAAEF,KAAK,CAAC;IAE7C,CAAC;IAED,WAAM,GAAG,MAAK;MACZ,OAAO,IAAI,CAACR,IAAI,CAACM,GAAG,CAAC,IAAI,CAACK,QAAQ,CAAC;IACrC,CAAC;IACD,YAAO,GAAId,EAAS,IAAG;MACrB,OAAO,IAAI,CAACG,IAAI,CAACM,GAAG,CAAC,GAAG,IAAI,CAACK,QAAQ,IAAId,EAAE,EAAE,CAAC;IAChD,CAAC;IACD,aAAQ,GAAIW,KAAS,IAAG;MACtB,OAAO,IAAI,CAACR,IAAI,CAACS,IAAI,CAAC,IAAI,CAACE,QAAQ,EAAEH,KAAK,CAAC;IAE7C,CAAC;IAGD,mBAAc,GAAIX,EAAS,IAAG;MAC5B,OAAO,IAAI,CAACG,IAAI,CAACY,MAAM,CAAC,GAAG,IAAI,CAACL,OAAO,IAAIV,EAAE,EAAE,CAAC;MAChD;MACA;IACF,CAAC;;IACD,eAAU,GAAIgB,MAAU,IAAG;MACzB,IAAI,CAACC,SAAS,GAAGD,MAAM;IACzB,CAAC;IACD,eAAU,GAAG,MAAI;MACf,IAAI,CAACC,SAAS,GAAG;QACfjB,EAAE,EAAE,EAAE;QACNI,MAAM,EAAE,EAAE;QACVC,IAAI,EAAE,EAAE;QACRC,MAAM,EAAE,EAAE;QACVC,GAAG,EAAE,EAAE;QACPC,GAAG,EAAE;OAEN;IACH,CAAC;IACD,aAAQ,GAAG,CAACU,OAAW,EAACC,WAAe,KAAG;MACxC,OAAO,IAAI,CAAChB,IAAI,CAACiB,GAAG,CAAC,GAAG,IAAI,CAACV,OAAO,IAAIQ,OAAO,EAAE,EAAEC,WAAW,CAAC;MAC/D;MACA;IAEF,CAAC;EAtEsC;;;AAX5BrB,UAAU;mBAAVA,UAAU;AAAA;AAAVA,UAAU;SAAVA,UAAU;EAAAuB,SAAVvB,UAAU;EAAAwB,YAFT;AAAM","names":["ApiService","getPersonajesById","id","Error","constructor","http","nombre","edad","origen","src","alt","get","baseUrl","album","post","baseUrl2","baseUrl3","delete","albums","albumInfo","albumId","editedAlbum","put","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\raque\\Desktop\\DIEGOYSUSPULL\\Firts\\angularpro\\src\\app\\services\\api.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Cantantes } from '../interface';\r\nimport { AlbumsComponent } from '../pages/albums/albums.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApiService {\r\n  getPersonajesById(id: number) {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n  baseUrl:string = \"http://localhost:3000/RAP\"\r\n  baseUrl2:string = \"http://localhost:3000/BOSSANOVA\"\r\n  baseUrl3:string = \"http://localhost:3000/POP\"\r\n  \r\n  \r\n\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n   public albumInfo = {\r\n    id: \"\",\r\n    nombre: \"\",\r\n    edad: \"\",\r\n    origen: \"\",\r\n    src: \"\",\r\n    alt: \"\"\r\n  }\r\n\r\n  getRAPs = () => {\r\n    return this.http.get(this.baseUrl) ;\r\n  }\r\n  getRAP = (id:number)=>{\r\n    return this.http.get(`${this.baseUrl}/${id}`);\r\n  }\r\n  postRAP = (album:any)=> {\r\n    return this.http.post(this.baseUrl, album);\r\n\r\n  }\r\n\r\n\r\n  getBOSSANOVA = () => {\r\n    return this.http.get(this.baseUrl2);\r\n  }\r\n  getBOSSA = (id:number)=>{\r\n    return this.http.get(`${this.baseUrl2}/${id}`);\r\n  }\r\n  postBOSSA = (album:any)=> {\r\n    return this.http.post(this.baseUrl2, album);\r\n\r\n  }\r\n\r\n  getPOP = () => {\r\n    return this.http.get(this.baseUrl3);\r\n  }\r\n  getPOPI = (id:number)=>{\r\n    return this.http.get(`${this.baseUrl3}/${id}`);\r\n  }\r\n  postPOPI = (album:any)=> {\r\n    return this.http.post(this.baseUrl3, album);\r\n\r\n  }\r\n\r\n\r\n  deleteCantante = (id:number)=>{\r\n    return this.http.delete(`${this.baseUrl}/${id}`);\r\n    // return this.http.delete(`${this.baseUrl2}/${id}`);\r\n    // return this.http.delete(`${this.baseUrl3}/${id}`);\r\n  }\r\n  editarItem = (albums:any)=> {\r\n    this.albumInfo = albums;\r\n  }\r\n  cleanAlbum = ()=>{\r\n    this.albumInfo = {\r\n      id: \"\",\r\n      nombre: \"\",\r\n      edad: \"\",\r\n      origen: \"\",\r\n      src: \"\",\r\n      alt: \"\"\r\n\r\n    };\r\n  }\r\n  putAlbum = (albumId:any,editedAlbum:any)=>{\r\n    return this.http.put(`${this.baseUrl}/${albumId}`, editedAlbum)\r\n    // return this.http.put(`${this.baseUrl2}/${albumId}`, editedAlbum)\r\n    // return this.http.put(`${this.baseUrl3}/${albumId}`, editedAlbum)\r\n\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}